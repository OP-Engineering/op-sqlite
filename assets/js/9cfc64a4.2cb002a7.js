"use strict";(self.webpackChunkop_sqlite=self.webpackChunkop_sqlite||[]).push([[227],{368:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"key_value_storage","title":"Key-Value Storage","description":"OP-SQLite provides a simple key-value storage API compatible with react-native-async-storage. Mostly as a convenience, use at your own caution. It uses sqlite as a simple text storage, so it might be slower than using other key-value packages or writing data to disk. If you use SQLCipher the data inside will also be encrypted.","source":"@site/docs/key_value_storage.md","sourceDirName":".","slug":"/key_value_storage","permalink":"/op-sqlite/docs/key_value_storage","draft":false,"unlisted":false,"editUrl":"https://github.com/OP-Engineering/op-sqlite/blob/main/docs/key_value_storage.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Custom Tokenizers","permalink":"/op-sqlite/docs/tokenizers"},"next":{"title":"API Reference","permalink":"/op-sqlite/docs/api"}}');var n=o(4848),s=o(8453);const i={sidebar_position:8},r="Key-Value Storage",l={},c=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"key-value-storage",children:"Key-Value Storage"})}),"\n",(0,n.jsx)(t.p,{children:"OP-SQLite provides a simple key-value storage API compatible with react-native-async-storage. Mostly as a convenience, use at your own caution. It uses sqlite as a simple text storage, so it might be slower than using other key-value packages or writing data to disk. If you use SQLCipher the data inside will also be encrypted."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import { Storage } from '@op-engineering/op-sqlite';\n\n// Storage is backed by it's own database\n// You can set the location like any other op-sqlite database\nconst storage = new Storage({\n  location: 'storage', // Optional, see location param on normal databases\n  encryptionKey: 'myEncryptionKey', // Optional, only used when used against SQLCipher\n});\n\nconst item = storage.getItemSync('foo');\n\nconst item2 = await storage.getItem('foo');\n\nawait storage.setItem('foo', 'bar');\n\nstorage.setItemSync('foo', 'bar');\n\nconst allKeys = storage.getAllKeys();\n\n// Clears the internal table\nstorage.clear();\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>r});var a=o(6540);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);
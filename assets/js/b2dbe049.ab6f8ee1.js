"use strict";(self.webpackChunkop_sqlite=self.webpackChunkop_sqlite||[]).push([[95],{3741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"gotchas","title":"Gotchas","description":"SQLite being a C library and React Native being a JS framework with native parts some times create conflicts. Here are the most common problems.","source":"@site/docs/gotchas.md","sourceDirName":".","slug":"/gotchas","permalink":"/op-sqlite/docs/gotchas","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gotchas.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/op-sqlite/docs/configuration"},"next":{"title":"Debugging","permalink":"/op-sqlite/docs/debugging"}}');var r=n(4848),i=n(8453);const o={sidebar_position:3},a="Gotchas",c={},l=[{value:"JavaScript and Numbers",id:"javascript-and-numbers",level:2},{value:"SQLite Gotchas",id:"sqlite-gotchas",level:2},{value:"Strictness",id:"strictness",level:3},{value:"Foreign constraints",id:"foreign-constraints",level:3},{value:"Error codes",id:"error-codes",level:3},{value:"Other Quirks",id:"other-quirks",level:3},{value:"HostObjects Quirks",id:"hostobjects-quirks",level:2},{value:"Closing a connection",id:"closing-a-connection",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"gotchas",children:"Gotchas"})}),"\n",(0,r.jsx)(t.p,{children:"SQLite being a C library and React Native being a JS framework with native parts some times create conflicts. Here are the most common problems."}),"\n",(0,r.jsx)(t.h2,{id:"javascript-and-numbers",children:"JavaScript and Numbers"}),"\n",(0,r.jsxs)(t.p,{children:["JavaScript represents every number internally as a ",(0,r.jsx)(t.code,{children:"double"}),". This means you can only have integers represented up to 2^53 bits(",(0,r.jsx)(t.code,{children:"Number.MAX_SAFE_INTEGER"}),"). Although sqlite supports long long (2^64 bits) the numbers will be truncated when you query a value bigger than what a JS number can represent. If you need to store larger numbers you should use a ",(0,r.jsx)(t.code,{children:"bigint"}),", however, such a type is not natively supported by sqlite, so you will have to serialize and deserialize from/to bigint when you do your queries:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"// When inserting, convert bigint into a string\nawait db.execute('INSERT INTO NumbersTable VALUES (?)', [\n  bigint('123').toString(),\n]);\n\n// When retrieving, convert string into bigint\nlet res = await db.execute('SELECT * FROM NumbersTable');\nlet myBigint = BigInt(res.rows[0].number);\n"})}),"\n",(0,r.jsx)(t.h2,{id:"sqlite-gotchas",children:"SQLite Gotchas"}),"\n",(0,r.jsx)(t.h3,{id:"strictness",children:"Strictness"}),"\n",(0,r.jsxs)(t.p,{children:["SQLite by default does not strictly check for types. if you want true type safety when you declare your tables you need to use the\xa0",(0,r.jsx)(t.code,{children:"STRICT"}),"\xa0keyword."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"await db.execute('CREATE TABLE Test (id INT PRIMARY KEY, name TEXT) STRICT;');\n"})}),"\n",(0,r.jsxs)(t.p,{children:["If you don't set it, SQLite will happily write whatever you insert in your table, independetly of the declared type (it will try to cast it though, e.g. a ",(0,r.jsx)(t.code,{children:'"1"'})," string might be turned to a ",(0,r.jsx)(t.code,{children:"1"})," int)."]}),"\n",(0,r.jsx)(t.h3,{id:"foreign-constraints",children:"Foreign constraints"}),"\n",(0,r.jsx)(t.p,{children:"When SQLite evaluates your query and you have forgein key constraints, it keeps track of the satisfied relations via a counter. Once your statement finishes executing and the counter is not 0, it throws a foreign key constraint failed error. Unfortunately, this simple design means it is impossible to catch which foreign constraint is failed and you will receive a generic error. Nothing op-sqlite can do about it, it's a design flaw in SQLite."}),"\n",(0,r.jsx)(t.p,{children:"In order to catch foreign key errors, you also need to execute the pragma when you open your connection:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"await db.execute('PRAGMA foreign_keys = true');\n"})}),"\n",(0,r.jsx)(t.h3,{id:"error-codes",children:"Error codes"}),"\n",(0,r.jsxs)(t.p,{children:["Sometimes you might be using valid SQL syntax for other engines or you might be doing something else wrong. The errors returned by op-sqlite contain the raw error code returned by SQLite and you should check\xa0",(0,r.jsx)(t.a,{href:"https://www.sqlite.org/rescode.html",children:"the reference"}),"\xa0for more detailed information."]}),"\n",(0,r.jsx)(t.h3,{id:"other-quirks",children:"Other Quirks"}),"\n",(0,r.jsxs)(t.p,{children:["See the\xa0",(0,r.jsx)(t.a,{href:"https://www.sqlite.org/quirks.html",children:"full list of SQLite quirks"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"hostobjects-quirks",children:"HostObjects Quirks"}),"\n",(0,r.jsxs)(t.p,{children:["op-sqlite can return HostObjects via the ",(0,r.jsx)(t.code,{children:"executeWithHostObjects"})," API, basically C++ instances exposed to the JS context. They are super fast to create at the cost of runtime access. However, this means some operations won't work."]}),"\n",(0,r.jsx)(t.p,{children:"You can write single properties with scalars, for example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"let results = await db.executeWithHostObjects('SELECT * FROM USER;');\nresults._array[0].newProp = 'myNewProp';\n"})}),"\n",(0,r.jsx)(t.p,{children:"As for trying to assign any object to a property, unfortunately, won't work."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"results._array[0].newProp = { foo: 'bar' };\n"})}),"\n",(0,r.jsxs)(t.p,{children:["On the C++ side properties need to be\xa0",(0,r.jsx)(t.a,{href:"https://github.com/OP-Engineering/op-sqlite/blob/main/cpp/DumbHostObject.cpp?rgh-link-date=2024-03-09T07%3A31%3A31Z#L62",children:"stored"}),"\xa0and\xa0",(0,r.jsx)(t.a,{href:"https://github.com/OP-Engineering/op-sqlite/blob/main/cpp/utils.cpp?rgh-link-date=2024-03-09T07%3A31%3A31Z#L64",children:"cast to C++ types"}),". Mostly to prevent race conditions and de-allocation between the JS Runtime and C++. Basically, not a bug, but rather a limitation of HostObjects."]}),"\n",(0,r.jsx)(t.p,{children:"You might want to try to create a completely new pure JS object to achieve this:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"let newUser = { ...{}, ...results._array[0], newProp: { foo: 'bar' } };\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Sometimes\xa0",(0,r.jsx)(t.code,{children:"{...item, blah: 'foo'}"}),"\xa0gets transpiled to\xa0",(0,r.jsx)(t.code,{children:"Object.assign(item, {blah: 'foo'}"}),", so that\u2019s why you might need to use the quirky ",(0,r.jsx)(t.code,{children:"...{}"})," at the beginning."]}),"\n",(0,r.jsx)(t.h2,{id:"closing-a-connection",children:"Closing a connection"}),"\n",(0,r.jsxs)(t.p,{children:["If you use ",(0,r.jsx)(t.code,{children:"react-native-restart"})," or your app has a non-standard lifecycle and \u201creloads\u201d itself at some point during runtime. It\u2019s important that you call ",(0,r.jsx)(t.code,{children:"db.close()"})," before to avoid crashes and memory leaks."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkop_sqlite=self.webpackChunkop_sqlite||[]).push([[152],{1810:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cpp_usage","title":"C++ Usage","description":"It\'s possible to access the native C++ functions in case you want to directly call the underlaying API without React-Native/JavaScript. This is useful in case you have native code and need to access sqlite functionality.","source":"@site/docs/cpp_usage.md","sourceDirName":".","slug":"/cpp_usage","permalink":"/op-sqlite/docs/cpp_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/OP-Engineering/op-sqlite/blob/main/docs/cpp_usage.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"ORMs & Libs","permalink":"/op-sqlite/docs/ORM_Libs"},"next":{"title":"Getting Started","permalink":"/op-sqlite/docs/Libsql/start"}}');var s=i(4848),o=i(8453);const r={sidebar_position:10},a="C++ Usage",d={},c=[{value:"Android",id:"android",level:2},{value:"Add header to your native code",id:"add-header-to-your-native-code",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"c-usage",children:"C++ Usage"})}),"\n",(0,s.jsx)(n.p,{children:"It's possible to access the native C++ functions in case you want to directly call the underlaying API without React-Native/JavaScript. This is useful in case you have native code and need to access sqlite functionality."}),"\n",(0,s.jsx)(n.h2,{id:"android",children:"Android"}),"\n",(0,s.jsxs)(n.p,{children:["The package supports prefab publishing for Android, which allows you to access it from within your ",(0,s.jsx)(n.code,{children:"CMakeLists.txt"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["Add the following to your ",(0,s.jsx)(n.code,{children:"CMakeLists.txt"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmake",children:"find_package(op-engineering_op-sqlite REQUIRED CONFIG)\n\n# Link all libraries together\ntarget_link_libraries(\n        ${PACKAGE_NAME}\n        ${LOG_LIB}\n        android\n        op-engineering_op-sqlite::op-sqlite\n)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"add-header-to-your-native-code",children:"Add header to your native code"}),"\n",(0,s.jsx)(n.p,{children:"Due to platform differences, you need to include the SQLite header differently for Android and iOS:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#ifdef __ANDROID__\n#include <op-engineering_op-sqlite/sqlite3.h>\n#include <op-engineering_op-sqlite/bridge.h>\n#else\n#include <op-sqlite/sqlite3.h>\n#include <op-sqlite/bridge.h>\n#endif\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you are wondering how to use C++ code, on Android it's achieved via JNI/NDK code, on iOS you can use any Objective-C++ (",(0,s.jsx)(n.code,{children:".mm"}),") file and import it directly. Swift integration might not work and will require setting the min swift version to ",(0,s.jsx)(n.code,{children:"5.9"}),", it's not covered in this guide."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);
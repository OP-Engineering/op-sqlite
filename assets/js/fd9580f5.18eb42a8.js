"use strict";(self.webpackChunkop_sqlite=self.webpackChunkop_sqlite||[]).push([[324],{7512:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Installation","href":"/op-sqlite/docs/installation","docId":"installation","unlisted":false},{"type":"link","label":"Configuration","href":"/op-sqlite/docs/configuration","docId":"configuration","unlisted":false},{"type":"link","label":"Gotchas","href":"/op-sqlite/docs/gotchas","docId":"gotchas","unlisted":false},{"type":"link","label":"Debugging","href":"/op-sqlite/docs/debugging","docId":"debugging","unlisted":false},{"type":"link","label":"Reactive Queries","href":"/op-sqlite/docs/reactive_queries","docId":"reactive_queries","unlisted":false},{"type":"link","label":"Custom Tokenizers","href":"/op-sqlite/docs/tokenizers","docId":"tokenizers","unlisted":false},{"type":"link","label":"Key-Value Storage","href":"/op-sqlite/docs/key_value_storage","docId":"key_value_storage","unlisted":false},{"type":"link","label":"API Reference","href":"/op-sqlite/docs/api","docId":"api","unlisted":false},{"type":"link","label":"ORMs & Libs","href":"/op-sqlite/docs/ORM_Libs","docId":"ORM_Libs","unlisted":false},{"type":"link","label":"C++ Usage","href":"/op-sqlite/docs/cpp_usage","docId":"cpp_usage","unlisted":false},{"type":"category","label":"Libsql","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting Started","href":"/op-sqlite/docs/Libsql/start","docId":"Libsql/start","unlisted":false},{"type":"link","label":"Updating Libsql","href":"/op-sqlite/docs/Libsql/updating","docId":"Libsql/updating","unlisted":false}]}]},"docs":{"api":{"id":"api","title":"API Reference","description":"Open","sidebar":"tutorialSidebar"},"configuration":{"id":"configuration","title":"Configuration","description":"Database Location","sidebar":"tutorialSidebar"},"cpp_usage":{"id":"cpp_usage","title":"C++ Usage","description":"It\'s possible to access the native C++ functions in case you want to directly call the underlaying API without React-Native/JavaScript. This is useful in case you have native code and need to access sqlite functionality.","sidebar":"tutorialSidebar"},"debugging":{"id":"debugging","title":"Debugging","description":"You might want to directly look at the data inside your database or export it from a client device to provide support.","sidebar":"tutorialSidebar"},"gotchas":{"id":"gotchas","title":"Gotchas","description":"SQLite being a C library and React Native being a JS framework, sometimes create conflicts. You should take these into account when using the library.","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installation","description":"Installing is easy","sidebar":"tutorialSidebar"},"key_value_storage":{"id":"key_value_storage","title":"Key-Value Storage","description":"OP-SQLite provides a simple key-value storage API compatible with react-native-async-storage. Mostly as a convenience, use at your own caution. It uses sqlite as a simple text storage, so it might be slower than using other key-value packages or writing data to disk. If you use SQLCipher the data inside will also be encrypted.","sidebar":"tutorialSidebar"},"Libsql/start":{"id":"Libsql/start","title":"Getting Started","description":"Libsql is supported as a \u201csqlite\u201d implementation. You can just turn it on by modifying your package.json:","sidebar":"tutorialSidebar"},"Libsql/updating":{"id":"Libsql/updating","title":"Updating Libsql","description":"Re-compile the C binary for iOS and Android","sidebar":"tutorialSidebar"},"ORM_Libs":{"id":"ORM_Libs","title":"ORMs & Libs","description":"OP-SQLite is not an ORM. It doesn\'t keep track of entities or creates SQL queries for you. It\'s pretty much a raw bindings to the sqlite3 C api. That being said, ORMs are useful (they make the easy things easier while making the hard things impossible) and there are ORMs that use op-sqlite as their main driver","sidebar":"tutorialSidebar"},"reactive_queries":{"id":"reactive_queries","title":"Reactive Queries","description":"You can subscribe to changes to your database via the use of native queries. Reactivity is achieved through sqlite\u2019s update hook and are executed on the native level which means they are blazing fast.","sidebar":"tutorialSidebar"},"tokenizers":{"id":"tokenizers","title":"Custom Tokenizers","description":"Tokenizers are custom C functions that allow you to turn a stream of characters into \u201ctokens\u201d. Tokens can be anything you want, you can break on whitespaces, special characters, etc. They are meant to help you break the characters for full-text search queries to be more accurate.","sidebar":"tutorialSidebar"}}}}')}}]);